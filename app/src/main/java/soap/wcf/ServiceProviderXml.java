package soap.wcf;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.8.0
//
// Created by Quasar Development at 15-10-2015
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class ServiceProviderXml extends AttributeContainer implements KvmSerializable
{
    
    public Integer AppointmentsPerPatient;
    
    public String Contacts;
    
    public String Id;
    
    public String Info;
    
    public LocationXml Locations;
    
    public String Name;
    
    public Double Rank;
    
    public String Region;
    
    public String Speciality;

    public ServiceProviderXml()
    {
    }

    public ServiceProviderXml(Object paramObj, ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        SoapObject soapObject=(SoapObject)inObj;  
        if (soapObject.hasProperty("AppointmentsPerPatient"))
        {	
	        Object obj = soapObject.getProperty("AppointmentsPerPatient");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.AppointmentsPerPatient = Integer.parseInt(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof Integer){
                this.AppointmentsPerPatient = (Integer)obj;
            }    
        }
        if (soapObject.hasProperty("Contacts"))
        {	
	        Object obj = soapObject.getProperty("Contacts");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.Contacts = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.Contacts = (String)obj;
            }    
        }
        if (soapObject.hasProperty("Id"))
        {	
	        Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.Id = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.Id = (String)obj;
            }    
        }
        if (soapObject.hasProperty("Info"))
        {	
	        Object obj = soapObject.getProperty("Info");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.Info = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.Info = (String)obj;
            }    
        }
        if (soapObject.hasProperty("Locations"))
        {	
	        Object j = soapObject.getProperty("Locations");
	        this.Locations = (LocationXml)__envelope.get(j,LocationXml.class);
        }
        if (soapObject.hasProperty("Name"))
        {	
	        Object obj = soapObject.getProperty("Name");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.Name = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.Name = (String)obj;
            }    
        }
        if (soapObject.hasProperty("Rank"))
        {	
	        Object obj = soapObject.getProperty("Rank");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.Rank = new Double(j.toString());
                }
	        }
	        else if (obj!= null && obj instanceof Double){
                this.Rank = (Double)obj;
            }    
        }
        if (soapObject.hasProperty("Region"))
        {	
	        Object obj = soapObject.getProperty("Region");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.Region = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.Region = (String)obj;
            }    
        }
        if (soapObject.hasProperty("Speciality"))
        {	
	        Object obj = soapObject.getProperty("Speciality");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class))
            {
                SoapPrimitive j =(SoapPrimitive) obj;
                if(j.toString()!=null)
                {
                    this.Speciality = j.toString();
                }
	        }
	        else if (obj!= null && obj instanceof String){
                this.Speciality = (String)obj;
            }    
        }


    }

    @Override
    public Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.AppointmentsPerPatient!=null?this.AppointmentsPerPatient:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.Contacts!=null?this.Contacts:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.Id!=null?this.Id:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.Info!=null?this.Info:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.Locations!=null?this.Locations:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.Name!=null?this.Name:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.Rank!=null?this.Rank:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.Region!=null?this.Region:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.Speciality!=null?this.Speciality:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 9;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "AppointmentsPerPatient";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Contacts";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Id";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Info";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==4)
        {
            info.type = LocationXml.class;
            info.name = "Locations";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Name";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==6)
        {
            info.type = Double.class;
            info.name = "Rank";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Region";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Speciality";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

}
